"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ObjectSerializer = void 0;
__exportStar(require("./Coords"), exports);
__exportStar(require("./RequestArrivalTimePeriod"), exports);
__exportStar(require("./RequestLevelOfDetail"), exports);
__exportStar(require("./RequestLocation"), exports);
__exportStar(require("./RequestRangeFull"), exports);
__exportStar(require("./RequestRangeNoMaxResults"), exports);
__exportStar(require("./RequestRoutes"), exports);
__exportStar(require("./RequestRoutesArrivalSearch"), exports);
__exportStar(require("./RequestRoutesDepartureSearch"), exports);
__exportStar(require("./RequestRoutesProperty"), exports);
__exportStar(require("./RequestSupportedLocations"), exports);
__exportStar(require("./RequestTimeFilter"), exports);
__exportStar(require("./RequestTimeFilterArrivalSearch"), exports);
__exportStar(require("./RequestTimeFilterDepartureSearch"), exports);
__exportStar(require("./RequestTimeFilterFast"), exports);
__exportStar(require("./RequestTimeFilterFastArrivalManyToOneSearch"), exports);
__exportStar(require("./RequestTimeFilterFastArrivalOneToManySearch"), exports);
__exportStar(require("./RequestTimeFilterFastArrivalSearches"), exports);
__exportStar(require("./RequestTimeFilterFastProperty"), exports);
__exportStar(require("./RequestTimeFilterPostcodeDistricts"), exports);
__exportStar(require("./RequestTimeFilterPostcodeDistrictsArrivalSearch"), exports);
__exportStar(require("./RequestTimeFilterPostcodeDistrictsDepartureSearch"), exports);
__exportStar(require("./RequestTimeFilterPostcodeDistrictsProperty"), exports);
__exportStar(require("./RequestTimeFilterPostcodeSectors"), exports);
__exportStar(require("./RequestTimeFilterPostcodeSectorsArrivalSearch"), exports);
__exportStar(require("./RequestTimeFilterPostcodeSectorsDepartureSearch"), exports);
__exportStar(require("./RequestTimeFilterPostcodeSectorsProperty"), exports);
__exportStar(require("./RequestTimeFilterPostcodes"), exports);
__exportStar(require("./RequestTimeFilterPostcodesArrivalSearch"), exports);
__exportStar(require("./RequestTimeFilterPostcodesDepartureSearch"), exports);
__exportStar(require("./RequestTimeFilterPostcodesProperty"), exports);
__exportStar(require("./RequestTimeFilterProperty"), exports);
__exportStar(require("./RequestTimeMap"), exports);
__exportStar(require("./RequestTimeMapArrivalSearch"), exports);
__exportStar(require("./RequestTimeMapDepartureSearch"), exports);
__exportStar(require("./RequestTimeMapProperty"), exports);
__exportStar(require("./RequestTransportation"), exports);
__exportStar(require("./RequestTransportationFast"), exports);
__exportStar(require("./RequestUnionOnIntersection"), exports);
__exportStar(require("./ResponseBoundingBox"), exports);
__exportStar(require("./ResponseBox"), exports);
__exportStar(require("./ResponseDistanceBreakdownItem"), exports);
__exportStar(require("./ResponseError"), exports);
__exportStar(require("./ResponseFareTicket"), exports);
__exportStar(require("./ResponseFares"), exports);
__exportStar(require("./ResponseFaresBreakdownItem"), exports);
__exportStar(require("./ResponseFaresFast"), exports);
__exportStar(require("./ResponseGeocoding"), exports);
__exportStar(require("./ResponseGeocodingGeoJsonFeature"), exports);
__exportStar(require("./ResponseGeocodingGeometry"), exports);
__exportStar(require("./ResponseGeocodingProperties"), exports);
__exportStar(require("./ResponseMapInfo"), exports);
__exportStar(require("./ResponseMapInfoFeatures"), exports);
__exportStar(require("./ResponseMapInfoFeaturesPublicTransport"), exports);
__exportStar(require("./ResponseMapInfoMap"), exports);
__exportStar(require("./ResponseRoute"), exports);
__exportStar(require("./ResponseRoutePart"), exports);
__exportStar(require("./ResponseRoutes"), exports);
__exportStar(require("./ResponseRoutesLocation"), exports);
__exportStar(require("./ResponseRoutesProperties"), exports);
__exportStar(require("./ResponseRoutesResult"), exports);
__exportStar(require("./ResponseShape"), exports);
__exportStar(require("./ResponseSupportedLocation"), exports);
__exportStar(require("./ResponseSupportedLocations"), exports);
__exportStar(require("./ResponseTimeFilter"), exports);
__exportStar(require("./ResponseTimeFilterFast"), exports);
__exportStar(require("./ResponseTimeFilterFastLocation"), exports);
__exportStar(require("./ResponseTimeFilterFastProperties"), exports);
__exportStar(require("./ResponseTimeFilterFastResult"), exports);
__exportStar(require("./ResponseTimeFilterLocation"), exports);
__exportStar(require("./ResponseTimeFilterPostcode"), exports);
__exportStar(require("./ResponseTimeFilterPostcodeDistrict"), exports);
__exportStar(require("./ResponseTimeFilterPostcodeDistrictProperties"), exports);
__exportStar(require("./ResponseTimeFilterPostcodeDistricts"), exports);
__exportStar(require("./ResponseTimeFilterPostcodeDistrictsResult"), exports);
__exportStar(require("./ResponseTimeFilterPostcodeSector"), exports);
__exportStar(require("./ResponseTimeFilterPostcodeSectorProperties"), exports);
__exportStar(require("./ResponseTimeFilterPostcodeSectors"), exports);
__exportStar(require("./ResponseTimeFilterPostcodeSectorsResult"), exports);
__exportStar(require("./ResponseTimeFilterPostcodes"), exports);
__exportStar(require("./ResponseTimeFilterPostcodesProperties"), exports);
__exportStar(require("./ResponseTimeFilterPostcodesResult"), exports);
__exportStar(require("./ResponseTimeFilterProperties"), exports);
__exportStar(require("./ResponseTimeFilterResult"), exports);
__exportStar(require("./ResponseTimeMap"), exports);
__exportStar(require("./ResponseTimeMapBoundingBoxes"), exports);
__exportStar(require("./ResponseTimeMapBoundingBoxesResult"), exports);
__exportStar(require("./ResponseTimeMapProperties"), exports);
__exportStar(require("./ResponseTimeMapResult"), exports);
__exportStar(require("./ResponseTimeMapWkt"), exports);
__exportStar(require("./ResponseTimeMapWktResult"), exports);
__exportStar(require("./ResponseTransportationMode"), exports);
__exportStar(require("./ResponseTravelTimeStatistics"), exports);
var Coords_1 = require("./Coords");
var RequestLevelOfDetail_1 = require("./RequestLevelOfDetail");
var RequestLocation_1 = require("./RequestLocation");
var RequestRangeFull_1 = require("./RequestRangeFull");
var RequestRangeNoMaxResults_1 = require("./RequestRangeNoMaxResults");
var RequestRoutes_1 = require("./RequestRoutes");
var RequestRoutesArrivalSearch_1 = require("./RequestRoutesArrivalSearch");
var RequestRoutesDepartureSearch_1 = require("./RequestRoutesDepartureSearch");
var RequestSupportedLocations_1 = require("./RequestSupportedLocations");
var RequestTimeFilter_1 = require("./RequestTimeFilter");
var RequestTimeFilterArrivalSearch_1 = require("./RequestTimeFilterArrivalSearch");
var RequestTimeFilterDepartureSearch_1 = require("./RequestTimeFilterDepartureSearch");
var RequestTimeFilterFast_1 = require("./RequestTimeFilterFast");
var RequestTimeFilterFastArrivalManyToOneSearch_1 = require("./RequestTimeFilterFastArrivalManyToOneSearch");
var RequestTimeFilterFastArrivalOneToManySearch_1 = require("./RequestTimeFilterFastArrivalOneToManySearch");
var RequestTimeFilterFastArrivalSearches_1 = require("./RequestTimeFilterFastArrivalSearches");
var RequestTimeFilterPostcodeDistricts_1 = require("./RequestTimeFilterPostcodeDistricts");
var RequestTimeFilterPostcodeDistrictsArrivalSearch_1 = require("./RequestTimeFilterPostcodeDistrictsArrivalSearch");
var RequestTimeFilterPostcodeDistrictsDepartureSearch_1 = require("./RequestTimeFilterPostcodeDistrictsDepartureSearch");
var RequestTimeFilterPostcodeSectors_1 = require("./RequestTimeFilterPostcodeSectors");
var RequestTimeFilterPostcodeSectorsArrivalSearch_1 = require("./RequestTimeFilterPostcodeSectorsArrivalSearch");
var RequestTimeFilterPostcodeSectorsDepartureSearch_1 = require("./RequestTimeFilterPostcodeSectorsDepartureSearch");
var RequestTimeFilterPostcodes_1 = require("./RequestTimeFilterPostcodes");
var RequestTimeFilterPostcodesArrivalSearch_1 = require("./RequestTimeFilterPostcodesArrivalSearch");
var RequestTimeFilterPostcodesDepartureSearch_1 = require("./RequestTimeFilterPostcodesDepartureSearch");
var RequestTimeMap_1 = require("./RequestTimeMap");
var RequestTimeMapArrivalSearch_1 = require("./RequestTimeMapArrivalSearch");
var RequestTimeMapDepartureSearch_1 = require("./RequestTimeMapDepartureSearch");
var RequestTransportation_1 = require("./RequestTransportation");
var RequestTransportationFast_1 = require("./RequestTransportationFast");
var RequestUnionOnIntersection_1 = require("./RequestUnionOnIntersection");
var ResponseBoundingBox_1 = require("./ResponseBoundingBox");
var ResponseBox_1 = require("./ResponseBox");
var ResponseDistanceBreakdownItem_1 = require("./ResponseDistanceBreakdownItem");
var ResponseError_1 = require("./ResponseError");
var ResponseFareTicket_1 = require("./ResponseFareTicket");
var ResponseFares_1 = require("./ResponseFares");
var ResponseFaresBreakdownItem_1 = require("./ResponseFaresBreakdownItem");
var ResponseFaresFast_1 = require("./ResponseFaresFast");
var ResponseGeocoding_1 = require("./ResponseGeocoding");
var ResponseGeocodingGeoJsonFeature_1 = require("./ResponseGeocodingGeoJsonFeature");
var ResponseGeocodingGeometry_1 = require("./ResponseGeocodingGeometry");
var ResponseGeocodingProperties_1 = require("./ResponseGeocodingProperties");
var ResponseMapInfo_1 = require("./ResponseMapInfo");
var ResponseMapInfoFeatures_1 = require("./ResponseMapInfoFeatures");
var ResponseMapInfoFeaturesPublicTransport_1 = require("./ResponseMapInfoFeaturesPublicTransport");
var ResponseMapInfoMap_1 = require("./ResponseMapInfoMap");
var ResponseRoute_1 = require("./ResponseRoute");
var ResponseRoutePart_1 = require("./ResponseRoutePart");
var ResponseRoutes_1 = require("./ResponseRoutes");
var ResponseRoutesLocation_1 = require("./ResponseRoutesLocation");
var ResponseRoutesProperties_1 = require("./ResponseRoutesProperties");
var ResponseRoutesResult_1 = require("./ResponseRoutesResult");
var ResponseShape_1 = require("./ResponseShape");
var ResponseSupportedLocation_1 = require("./ResponseSupportedLocation");
var ResponseSupportedLocations_1 = require("./ResponseSupportedLocations");
var ResponseTimeFilter_1 = require("./ResponseTimeFilter");
var ResponseTimeFilterFast_1 = require("./ResponseTimeFilterFast");
var ResponseTimeFilterFastLocation_1 = require("./ResponseTimeFilterFastLocation");
var ResponseTimeFilterFastProperties_1 = require("./ResponseTimeFilterFastProperties");
var ResponseTimeFilterFastResult_1 = require("./ResponseTimeFilterFastResult");
var ResponseTimeFilterLocation_1 = require("./ResponseTimeFilterLocation");
var ResponseTimeFilterPostcode_1 = require("./ResponseTimeFilterPostcode");
var ResponseTimeFilterPostcodeDistrict_1 = require("./ResponseTimeFilterPostcodeDistrict");
var ResponseTimeFilterPostcodeDistrictProperties_1 = require("./ResponseTimeFilterPostcodeDistrictProperties");
var ResponseTimeFilterPostcodeDistricts_1 = require("./ResponseTimeFilterPostcodeDistricts");
var ResponseTimeFilterPostcodeDistrictsResult_1 = require("./ResponseTimeFilterPostcodeDistrictsResult");
var ResponseTimeFilterPostcodeSector_1 = require("./ResponseTimeFilterPostcodeSector");
var ResponseTimeFilterPostcodeSectorProperties_1 = require("./ResponseTimeFilterPostcodeSectorProperties");
var ResponseTimeFilterPostcodeSectors_1 = require("./ResponseTimeFilterPostcodeSectors");
var ResponseTimeFilterPostcodeSectorsResult_1 = require("./ResponseTimeFilterPostcodeSectorsResult");
var ResponseTimeFilterPostcodes_1 = require("./ResponseTimeFilterPostcodes");
var ResponseTimeFilterPostcodesProperties_1 = require("./ResponseTimeFilterPostcodesProperties");
var ResponseTimeFilterPostcodesResult_1 = require("./ResponseTimeFilterPostcodesResult");
var ResponseTimeFilterProperties_1 = require("./ResponseTimeFilterProperties");
var ResponseTimeFilterResult_1 = require("./ResponseTimeFilterResult");
var ResponseTimeMap_1 = require("./ResponseTimeMap");
var ResponseTimeMapBoundingBoxes_1 = require("./ResponseTimeMapBoundingBoxes");
var ResponseTimeMapBoundingBoxesResult_1 = require("./ResponseTimeMapBoundingBoxesResult");
var ResponseTimeMapProperties_1 = require("./ResponseTimeMapProperties");
var ResponseTimeMapResult_1 = require("./ResponseTimeMapResult");
var ResponseTimeMapWkt_1 = require("./ResponseTimeMapWkt");
var ResponseTimeMapWktResult_1 = require("./ResponseTimeMapWktResult");
var ResponseTravelTimeStatistics_1 = require("./ResponseTravelTimeStatistics");
var primitives = [
    "string",
    "boolean",
    "double",
    "integer",
    "long",
    "float",
    "number",
    "any"
];
var supportedMediaTypes = {
    "application/json": Infinity,
    "application/octet-stream": 0
};
var enumsMap = new Set([
    "RequestArrivalTimePeriod",
    "RequestLevelOfDetailScaleTypeEnum",
    "RequestLevelOfDetailLevelEnum",
    "RequestRoutesProperty",
    "RequestTimeFilterFastProperty",
    "RequestTimeFilterPostcodeDistrictsProperty",
    "RequestTimeFilterPostcodeSectorsProperty",
    "RequestTimeFilterPostcodesProperty",
    "RequestTimeFilterProperty",
    "RequestTimeMapProperty",
    "RequestTransportationTypeEnum",
    "RequestTransportationFastTypeEnum",
    "ResponseFareTicketTypeEnum",
    "ResponseRoutePartTypeEnum",
    "ResponseTransportationMode",
]);
var typeMap = {
    "Coords": Coords_1.Coords,
    "RequestLevelOfDetail": RequestLevelOfDetail_1.RequestLevelOfDetail,
    "RequestLocation": RequestLocation_1.RequestLocation,
    "RequestRangeFull": RequestRangeFull_1.RequestRangeFull,
    "RequestRangeNoMaxResults": RequestRangeNoMaxResults_1.RequestRangeNoMaxResults,
    "RequestRoutes": RequestRoutes_1.RequestRoutes,
    "RequestRoutesArrivalSearch": RequestRoutesArrivalSearch_1.RequestRoutesArrivalSearch,
    "RequestRoutesDepartureSearch": RequestRoutesDepartureSearch_1.RequestRoutesDepartureSearch,
    "RequestSupportedLocations": RequestSupportedLocations_1.RequestSupportedLocations,
    "RequestTimeFilter": RequestTimeFilter_1.RequestTimeFilter,
    "RequestTimeFilterArrivalSearch": RequestTimeFilterArrivalSearch_1.RequestTimeFilterArrivalSearch,
    "RequestTimeFilterDepartureSearch": RequestTimeFilterDepartureSearch_1.RequestTimeFilterDepartureSearch,
    "RequestTimeFilterFast": RequestTimeFilterFast_1.RequestTimeFilterFast,
    "RequestTimeFilterFastArrivalManyToOneSearch": RequestTimeFilterFastArrivalManyToOneSearch_1.RequestTimeFilterFastArrivalManyToOneSearch,
    "RequestTimeFilterFastArrivalOneToManySearch": RequestTimeFilterFastArrivalOneToManySearch_1.RequestTimeFilterFastArrivalOneToManySearch,
    "RequestTimeFilterFastArrivalSearches": RequestTimeFilterFastArrivalSearches_1.RequestTimeFilterFastArrivalSearches,
    "RequestTimeFilterPostcodeDistricts": RequestTimeFilterPostcodeDistricts_1.RequestTimeFilterPostcodeDistricts,
    "RequestTimeFilterPostcodeDistrictsArrivalSearch": RequestTimeFilterPostcodeDistrictsArrivalSearch_1.RequestTimeFilterPostcodeDistrictsArrivalSearch,
    "RequestTimeFilterPostcodeDistrictsDepartureSearch": RequestTimeFilterPostcodeDistrictsDepartureSearch_1.RequestTimeFilterPostcodeDistrictsDepartureSearch,
    "RequestTimeFilterPostcodeSectors": RequestTimeFilterPostcodeSectors_1.RequestTimeFilterPostcodeSectors,
    "RequestTimeFilterPostcodeSectorsArrivalSearch": RequestTimeFilterPostcodeSectorsArrivalSearch_1.RequestTimeFilterPostcodeSectorsArrivalSearch,
    "RequestTimeFilterPostcodeSectorsDepartureSearch": RequestTimeFilterPostcodeSectorsDepartureSearch_1.RequestTimeFilterPostcodeSectorsDepartureSearch,
    "RequestTimeFilterPostcodes": RequestTimeFilterPostcodes_1.RequestTimeFilterPostcodes,
    "RequestTimeFilterPostcodesArrivalSearch": RequestTimeFilterPostcodesArrivalSearch_1.RequestTimeFilterPostcodesArrivalSearch,
    "RequestTimeFilterPostcodesDepartureSearch": RequestTimeFilterPostcodesDepartureSearch_1.RequestTimeFilterPostcodesDepartureSearch,
    "RequestTimeMap": RequestTimeMap_1.RequestTimeMap,
    "RequestTimeMapArrivalSearch": RequestTimeMapArrivalSearch_1.RequestTimeMapArrivalSearch,
    "RequestTimeMapDepartureSearch": RequestTimeMapDepartureSearch_1.RequestTimeMapDepartureSearch,
    "RequestTransportation": RequestTransportation_1.RequestTransportation,
    "RequestTransportationFast": RequestTransportationFast_1.RequestTransportationFast,
    "RequestUnionOnIntersection": RequestUnionOnIntersection_1.RequestUnionOnIntersection,
    "ResponseBoundingBox": ResponseBoundingBox_1.ResponseBoundingBox,
    "ResponseBox": ResponseBox_1.ResponseBox,
    "ResponseDistanceBreakdownItem": ResponseDistanceBreakdownItem_1.ResponseDistanceBreakdownItem,
    "ResponseError": ResponseError_1.ResponseError,
    "ResponseFareTicket": ResponseFareTicket_1.ResponseFareTicket,
    "ResponseFares": ResponseFares_1.ResponseFares,
    "ResponseFaresBreakdownItem": ResponseFaresBreakdownItem_1.ResponseFaresBreakdownItem,
    "ResponseFaresFast": ResponseFaresFast_1.ResponseFaresFast,
    "ResponseGeocoding": ResponseGeocoding_1.ResponseGeocoding,
    "ResponseGeocodingGeoJsonFeature": ResponseGeocodingGeoJsonFeature_1.ResponseGeocodingGeoJsonFeature,
    "ResponseGeocodingGeometry": ResponseGeocodingGeometry_1.ResponseGeocodingGeometry,
    "ResponseGeocodingProperties": ResponseGeocodingProperties_1.ResponseGeocodingProperties,
    "ResponseMapInfo": ResponseMapInfo_1.ResponseMapInfo,
    "ResponseMapInfoFeatures": ResponseMapInfoFeatures_1.ResponseMapInfoFeatures,
    "ResponseMapInfoFeaturesPublicTransport": ResponseMapInfoFeaturesPublicTransport_1.ResponseMapInfoFeaturesPublicTransport,
    "ResponseMapInfoMap": ResponseMapInfoMap_1.ResponseMapInfoMap,
    "ResponseRoute": ResponseRoute_1.ResponseRoute,
    "ResponseRoutePart": ResponseRoutePart_1.ResponseRoutePart,
    "ResponseRoutes": ResponseRoutes_1.ResponseRoutes,
    "ResponseRoutesLocation": ResponseRoutesLocation_1.ResponseRoutesLocation,
    "ResponseRoutesProperties": ResponseRoutesProperties_1.ResponseRoutesProperties,
    "ResponseRoutesResult": ResponseRoutesResult_1.ResponseRoutesResult,
    "ResponseShape": ResponseShape_1.ResponseShape,
    "ResponseSupportedLocation": ResponseSupportedLocation_1.ResponseSupportedLocation,
    "ResponseSupportedLocations": ResponseSupportedLocations_1.ResponseSupportedLocations,
    "ResponseTimeFilter": ResponseTimeFilter_1.ResponseTimeFilter,
    "ResponseTimeFilterFast": ResponseTimeFilterFast_1.ResponseTimeFilterFast,
    "ResponseTimeFilterFastLocation": ResponseTimeFilterFastLocation_1.ResponseTimeFilterFastLocation,
    "ResponseTimeFilterFastProperties": ResponseTimeFilterFastProperties_1.ResponseTimeFilterFastProperties,
    "ResponseTimeFilterFastResult": ResponseTimeFilterFastResult_1.ResponseTimeFilterFastResult,
    "ResponseTimeFilterLocation": ResponseTimeFilterLocation_1.ResponseTimeFilterLocation,
    "ResponseTimeFilterPostcode": ResponseTimeFilterPostcode_1.ResponseTimeFilterPostcode,
    "ResponseTimeFilterPostcodeDistrict": ResponseTimeFilterPostcodeDistrict_1.ResponseTimeFilterPostcodeDistrict,
    "ResponseTimeFilterPostcodeDistrictProperties": ResponseTimeFilterPostcodeDistrictProperties_1.ResponseTimeFilterPostcodeDistrictProperties,
    "ResponseTimeFilterPostcodeDistricts": ResponseTimeFilterPostcodeDistricts_1.ResponseTimeFilterPostcodeDistricts,
    "ResponseTimeFilterPostcodeDistrictsResult": ResponseTimeFilterPostcodeDistrictsResult_1.ResponseTimeFilterPostcodeDistrictsResult,
    "ResponseTimeFilterPostcodeSector": ResponseTimeFilterPostcodeSector_1.ResponseTimeFilterPostcodeSector,
    "ResponseTimeFilterPostcodeSectorProperties": ResponseTimeFilterPostcodeSectorProperties_1.ResponseTimeFilterPostcodeSectorProperties,
    "ResponseTimeFilterPostcodeSectors": ResponseTimeFilterPostcodeSectors_1.ResponseTimeFilterPostcodeSectors,
    "ResponseTimeFilterPostcodeSectorsResult": ResponseTimeFilterPostcodeSectorsResult_1.ResponseTimeFilterPostcodeSectorsResult,
    "ResponseTimeFilterPostcodes": ResponseTimeFilterPostcodes_1.ResponseTimeFilterPostcodes,
    "ResponseTimeFilterPostcodesProperties": ResponseTimeFilterPostcodesProperties_1.ResponseTimeFilterPostcodesProperties,
    "ResponseTimeFilterPostcodesResult": ResponseTimeFilterPostcodesResult_1.ResponseTimeFilterPostcodesResult,
    "ResponseTimeFilterProperties": ResponseTimeFilterProperties_1.ResponseTimeFilterProperties,
    "ResponseTimeFilterResult": ResponseTimeFilterResult_1.ResponseTimeFilterResult,
    "ResponseTimeMap": ResponseTimeMap_1.ResponseTimeMap,
    "ResponseTimeMapBoundingBoxes": ResponseTimeMapBoundingBoxes_1.ResponseTimeMapBoundingBoxes,
    "ResponseTimeMapBoundingBoxesResult": ResponseTimeMapBoundingBoxesResult_1.ResponseTimeMapBoundingBoxesResult,
    "ResponseTimeMapProperties": ResponseTimeMapProperties_1.ResponseTimeMapProperties,
    "ResponseTimeMapResult": ResponseTimeMapResult_1.ResponseTimeMapResult,
    "ResponseTimeMapWkt": ResponseTimeMapWkt_1.ResponseTimeMapWkt,
    "ResponseTimeMapWktResult": ResponseTimeMapWktResult_1.ResponseTimeMapWktResult,
    "ResponseTravelTimeStatistics": ResponseTravelTimeStatistics_1.ResponseTravelTimeStatistics,
};
var ObjectSerializer = (function () {
    function ObjectSerializer() {
    }
    ObjectSerializer.findCorrectType = function (data, expectedType) {
        if (data == undefined) {
            return expectedType;
        }
        else if (primitives.indexOf(expectedType.toLowerCase()) !== -1) {
            return expectedType;
        }
        else if (expectedType === "Date") {
            return expectedType;
        }
        else {
            if (enumsMap.has(expectedType)) {
                return expectedType;
            }
            if (!typeMap[expectedType]) {
                return expectedType;
            }
            var discriminatorProperty = typeMap[expectedType].discriminator;
            if (discriminatorProperty == null) {
                return expectedType;
            }
            else {
                if (data[discriminatorProperty]) {
                    var discriminatorType = data[discriminatorProperty];
                    if (typeMap[discriminatorType]) {
                        return discriminatorType;
                    }
                    else {
                        return expectedType;
                    }
                }
                else {
                    return expectedType;
                }
            }
        }
    };
    ObjectSerializer.serialize = function (data, type, format) {
        if (data == undefined) {
            return data;
        }
        else if (primitives.indexOf(type.toLowerCase()) !== -1) {
            return data;
        }
        else if (type.lastIndexOf("Array<", 0) === 0) {
            var subType = type.replace("Array<", "");
            subType = subType.substring(0, subType.length - 1);
            var transformedData = [];
            for (var index in data) {
                var date = data[index];
                transformedData.push(ObjectSerializer.serialize(date, subType, format));
            }
            return transformedData;
        }
        else if (type === "Date") {
            if (format == "date") {
                var month = data.getMonth() + 1;
                month = month < 10 ? "0" + month.toString() : month.toString();
                var day = data.getDate();
                day = day < 10 ? "0" + day.toString() : day.toString();
                return data.getFullYear() + "-" + month + "-" + day;
            }
            else {
                return data.toISOString();
            }
        }
        else {
            if (enumsMap.has(type)) {
                return data;
            }
            if (!typeMap[type]) {
                return data;
            }
            type = this.findCorrectType(data, type);
            var attributeTypes = typeMap[type].getAttributeTypeMap();
            var instance = {};
            for (var index in attributeTypes) {
                var attributeType = attributeTypes[index];
                instance[attributeType.baseName] = ObjectSerializer.serialize(data[attributeType.name], attributeType.type, attributeType.format);
            }
            return instance;
        }
    };
    ObjectSerializer.deserialize = function (data, type, format) {
        type = ObjectSerializer.findCorrectType(data, type);
        if (data == undefined) {
            return data;
        }
        else if (primitives.indexOf(type.toLowerCase()) !== -1) {
            return data;
        }
        else if (type.lastIndexOf("Array<", 0) === 0) {
            var subType = type.replace("Array<", "");
            subType = subType.substring(0, subType.length - 1);
            var transformedData = [];
            for (var index in data) {
                var date = data[index];
                transformedData.push(ObjectSerializer.deserialize(date, subType, format));
            }
            return transformedData;
        }
        else if (type === "Date") {
            return new Date(data);
        }
        else {
            if (enumsMap.has(type)) {
                return data;
            }
            if (!typeMap[type]) {
                return data;
            }
            var instance = new typeMap[type]();
            var attributeTypes = typeMap[type].getAttributeTypeMap();
            for (var index in attributeTypes) {
                var attributeType = attributeTypes[index];
                instance[attributeType.name] = ObjectSerializer.deserialize(data[attributeType.baseName], attributeType.type, attributeType.format);
            }
            return instance;
        }
    };
    ObjectSerializer.normalizeMediaType = function (mediaType) {
        if (mediaType === undefined) {
            return undefined;
        }
        return mediaType.split(";")[0].trim().toLowerCase();
    };
    ObjectSerializer.getPreferredMediaType = function (mediaTypes) {
        if (!mediaTypes) {
            return "application/json";
        }
        var normalMediaTypes = mediaTypes.map(this.normalizeMediaType);
        var selectedMediaType = undefined;
        var selectedRank = -Infinity;
        for (var _i = 0, normalMediaTypes_1 = normalMediaTypes; _i < normalMediaTypes_1.length; _i++) {
            var mediaType = normalMediaTypes_1[_i];
            if (supportedMediaTypes[mediaType] > selectedRank) {
                selectedMediaType = mediaType;
                selectedRank = supportedMediaTypes[mediaType];
            }
        }
        if (selectedMediaType === undefined) {
            throw new Error("None of the given media types are supported: " + mediaTypes.join(", "));
        }
        return selectedMediaType;
    };
    ObjectSerializer.stringify = function (data, mediaType) {
        if (mediaType === "application/json") {
            return JSON.stringify(data);
        }
        throw new Error("The mediaType " + mediaType + " is not supported by ObjectSerializer.stringify.");
    };
    ObjectSerializer.parse = function (rawData, mediaType) {
        if (mediaType === undefined) {
            throw new Error("Cannot parse content. No Content-Type defined.");
        }
        if (mediaType === "application/json") {
            return JSON.parse(rawData);
        }
        throw new Error("The mediaType " + mediaType + " is not supported by ObjectSerializer.parse.");
    };
    return ObjectSerializer;
}());
exports.ObjectSerializer = ObjectSerializer;
//# sourceMappingURL=ObjectSerializer.js.map