"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ObjectDefaultApi = void 0;
var ObservableAPI_1 = require("./ObservableAPI");
var ObjectDefaultApi = (function () {
    function ObjectDefaultApi(configuration, requestFactory, responseProcessor) {
        this.api = new ObservableAPI_1.ObservableDefaultApi(configuration, requestFactory, responseProcessor);
    }
    ObjectDefaultApi.prototype.geocodingReverseSearch = function (param, options) {
        return this.api.geocodingReverseSearch(param.lat, param.lng, param.within_country, options).toPromise();
    };
    ObjectDefaultApi.prototype.geocodingSearch = function (param, options) {
        return this.api.geocodingSearch(param.query, param.focus_lat, param.focus_lng, param.within_country, options).toPromise();
    };
    ObjectDefaultApi.prototype.mapInfo = function (param, options) {
        return this.api.mapInfo(options).toPromise();
    };
    ObjectDefaultApi.prototype.routes = function (param, options) {
        return this.api.routes(param.RequestRoutes, options).toPromise();
    };
    ObjectDefaultApi.prototype.supportedLocations = function (param, options) {
        return this.api.supportedLocations(param.RequestSupportedLocations, options).toPromise();
    };
    ObjectDefaultApi.prototype.timeFilter = function (param, options) {
        return this.api.timeFilter(param.RequestTimeFilter, options).toPromise();
    };
    ObjectDefaultApi.prototype.timeFilterFast = function (param, options) {
        return this.api.timeFilterFast(param.RequestTimeFilterFast, options).toPromise();
    };
    ObjectDefaultApi.prototype.timeFilterPostcodeDistricts = function (param, options) {
        return this.api.timeFilterPostcodeDistricts(param.RequestTimeFilterPostcodeDistricts, options).toPromise();
    };
    ObjectDefaultApi.prototype.timeFilterPostcodeSectors = function (param, options) {
        return this.api.timeFilterPostcodeSectors(param.RequestTimeFilterPostcodeSectors, options).toPromise();
    };
    ObjectDefaultApi.prototype.timeFilterPostcodes = function (param, options) {
        return this.api.timeFilterPostcodes(param.RequestTimeFilterPostcodes, options).toPromise();
    };
    ObjectDefaultApi.prototype.timeMap = function (param, options) {
        return this.api.timeMap(param.RequestTimeMap, options).toPromise();
    };
    return ObjectDefaultApi;
}());
exports.ObjectDefaultApi = ObjectDefaultApi;
//# sourceMappingURL=ObjectParamAPI.js.map