import { Configuration } from '../configuration';
import { Observable } from '../rxjsStub';
import { RequestRoutes } from '../models/RequestRoutes';
import { RequestSupportedLocations } from '../models/RequestSupportedLocations';
import { RequestTimeFilter } from '../models/RequestTimeFilter';
import { RequestTimeFilterFast } from '../models/RequestTimeFilterFast';
import { RequestTimeFilterPostcodeDistricts } from '../models/RequestTimeFilterPostcodeDistricts';
import { RequestTimeFilterPostcodeSectors } from '../models/RequestTimeFilterPostcodeSectors';
import { RequestTimeFilterPostcodes } from '../models/RequestTimeFilterPostcodes';
import { RequestTimeMap } from '../models/RequestTimeMap';
import { ResponseGeocoding } from '../models/ResponseGeocoding';
import { ResponseMapInfo } from '../models/ResponseMapInfo';
import { ResponseRoutes } from '../models/ResponseRoutes';
import { ResponseSupportedLocations } from '../models/ResponseSupportedLocations';
import { ResponseTimeFilter } from '../models/ResponseTimeFilter';
import { ResponseTimeFilterFast } from '../models/ResponseTimeFilterFast';
import { ResponseTimeFilterPostcodeDistricts } from '../models/ResponseTimeFilterPostcodeDistricts';
import { ResponseTimeFilterPostcodeSectors } from '../models/ResponseTimeFilterPostcodeSectors';
import { ResponseTimeFilterPostcodes } from '../models/ResponseTimeFilterPostcodes';
import { ResponseTimeMap } from '../models/ResponseTimeMap';
import { DefaultApiRequestFactory, DefaultApiResponseProcessor } from "../apis/DefaultApi";
export declare class ObservableDefaultApi {
    private requestFactory;
    private responseProcessor;
    private configuration;
    constructor(configuration: Configuration, requestFactory?: DefaultApiRequestFactory, responseProcessor?: DefaultApiResponseProcessor);
    geocodingReverseSearch(lat: number, lng: number, within_country?: string, options?: Configuration): Observable<ResponseGeocoding>;
    geocodingSearch(query: string, focus_lat?: number, focus_lng?: number, within_country?: string, options?: Configuration): Observable<ResponseGeocoding>;
    mapInfo(options?: Configuration): Observable<ResponseMapInfo>;
    routes(RequestRoutes: RequestRoutes, options?: Configuration): Observable<ResponseRoutes>;
    supportedLocations(RequestSupportedLocations: RequestSupportedLocations, options?: Configuration): Observable<ResponseSupportedLocations>;
    timeFilter(RequestTimeFilter: RequestTimeFilter, options?: Configuration): Observable<ResponseTimeFilter>;
    timeFilterFast(RequestTimeFilterFast: RequestTimeFilterFast, options?: Configuration): Observable<ResponseTimeFilterFast>;
    timeFilterPostcodeDistricts(RequestTimeFilterPostcodeDistricts: RequestTimeFilterPostcodeDistricts, options?: Configuration): Observable<ResponseTimeFilterPostcodeDistricts>;
    timeFilterPostcodeSectors(RequestTimeFilterPostcodeSectors: RequestTimeFilterPostcodeSectors, options?: Configuration): Observable<ResponseTimeFilterPostcodeSectors>;
    timeFilterPostcodes(RequestTimeFilterPostcodes: RequestTimeFilterPostcodes, options?: Configuration): Observable<ResponseTimeFilterPostcodes>;
    timeMap(RequestTimeMap: RequestTimeMap, options?: Configuration): Observable<ResponseTimeMap>;
}
